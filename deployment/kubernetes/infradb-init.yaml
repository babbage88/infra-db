apiVersion: batch/v1
kind: Job
metadata:
  name: init-infradb
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: init-infradb
          image: ghcr.io/babbage88/init-infradb:v1.0.9
          imagePullPolicy: Always
          command: ["/app/migrate"]
          volumeMounts:
            - name: initdb-env
              mountPath: "/app/.env"
              subPath: .env
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
      volumes:
        - name: initdb-env
          secret:
            secretName: initdb.env
      imagePullSecrets:
        - name: ghcr
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-infra
spec:
  replicas: 3
  selector:
    matchLabels:
      app: go-infra
  template:
    metadata:
      labels:
        app: go-infra
    spec:
      serviceAccountName: svc-infra-user
      initContainers:
        - name: wait-for-initdb
          image: ghcr.io/babbage88/initdb-jobmon:v0.0.1 
          command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "Waiting for init-infradb job to succeed..."
              while true; do
                job_status=$(curl -sSk -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
                  -H "Accept: application/json" \
                  --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt \
                  https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}/apis/batch/v1/namespaces/default/jobs/init-infradb \
                  | jq -r '.status.succeeded');
                if [ "$job_status" = "1" ]; then
                  echo "Job init-infradb completed successfully."
                  break;
                elif [ "$job_status" = "null" ]; then
                  echo "Job init-infradb is not found or has not started yet."
                else
                  echo "Job init-infradb is still running or failed."
                fi
                sleep 5;
              done
          env:
            - name: KUBERNETES_SERVICE_HOST
              value: "10.0.0.90"
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
      containers:
        - name: go-infra
          image: ghcr.io/babbage88/go-infra:v1.0.9
          imagePullPolicy: Always
          ports:
            - containerPort: 8993
          command: ["/app/server"]
          volumeMounts:
            - name: cf-token-ini
              mountPath: "/run/secrets/cf_token.ini"
              subPath: cf_token.ini
            - name: k3s-env
              mountPath: "/app/.env"
              subPath: k3s.env
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
      volumes:
        - name: cf-token-ini
          secret:
            secretName: cf-token-ini
        - name: k3s-env
          secret:
            secretName: k3s-env
      imagePullSecrets:
        - name: ghcr
